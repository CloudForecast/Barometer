# Default values for cloudforecast-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

barometerAgent:
  # API key to send data back to the Cloudforecast Barometer.
  # Alternatively, provide a Secret name and key that holds the Barometer API key.
  # One of the two is required.
  apiKey: ''
  apiKeySecret:
    secretName: ''
    key: ''

  # Cluster-internal URL (and optionally, port) for the Prometheus HTTP API.
  # Leave blank if using the Prometheus instance installed with the chart.
  # If using an already-existing Prometheus instance, must be provided.
  prometheusUrlOverride: ''

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true

## Dependencies

# Values for configuring the deployment of Prometheus
# The Prometheus chart from the prometheus-community is used
# the guide for it can be found at:
#   https://artifacthub.io/packages/helm/prometheus-community/prometheus
# with the default values documented at:
#   https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus/values.yaml
prometheus:
  enabled: true

  server:
    enabled: true

  # kube-state-metrics is installed via the Prometheus chart.
  kubeStateMetrics:
    enabled: true

  # node-exporter is installed via the Prometheus chart.
  nodeExporter:
    enabled: true

  alertmanager:
    enabled: false

  pushgateway:
    enabled: false

  serviceAccounts:
    alertmanager:
      create: false
    pushgateway:
      create: false
    server:
      create: true

# This is needed to avoid a nil pointer error in the Prometheus subchart
server: {}
